openapi: 3.0.1
info:
  title: Notifications Service API
  description: Notifications from GoOutSafe with Microservices
  version: "0.1"
servers:
- url: /
paths:
  /notifications:
    get:
      tags:
      - Notifications
      summary: Performs a search on notifications
      operationId: app.get_notifications
      parameters:
      - name: user_id
        in: query
        description: User's unique identifier
        required: false
        schema:
          type: integer
      - name: read
        in: query
        description: Whether to retrieve only read notifications or unread
        required: false
        schema:
          type: boolean
      responses:
        200:
          description: Return all notifications that match parameters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
    post:
      tags:
      - Notifications
      summary: Creates a new notification for a user
      operationId: app.new_notification
      requestBody:
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/NewNotification'

      responses:
        201:
          description: Notification created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        400:
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /notifications/{notification_id}:
    get:
      tags:
      - Notifications
      summary: Get a single notification
      operationId: app.get_notification
      parameters:
      - name: notification_id
        in: path
        description: Notification's unique identifier
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Return notification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        404:
          description: Notification does not exist
          content: {}
    patch:
      tags:
      - Notifications
      summary: Edit a notification
      operationId: app.edit_notification
      parameters:
      - name: notification_id
        in: path
        description: Notification's unique identifier
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditNotification'
      responses:
        200:
          description: Notification edited successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditNotification'
        400:
          description: Invalid sent_on value
          content: {}
        404:
          description: Notification does not exist
          content: {}
components:
  schemas:
    Error:
      type: object
      properties:
        type:
          type: string
          description: Error type
          example: about:blank
        title:
          type: string
          description: Error name
          example: Bad Request
        status:
          type: integer
          description: Error status code
          example: about:blank
        detail:
          type: string
          description: Error description
          example: None is not of type 'string'
    NotificationBase:
      type: object
      properties:
        url:
          type: string
          description: Resource location
          example: "/notifications/123"
          readOnly: true
    NewNotification:
      allOf:
        - $ref: '#/components/schemas/NotificationBase'
        - type: object
          required:
          - user_id
          - sent_on
          - content
          properties:
            user_id:
              type: integer
              description: Recipient's id
              example: 345
            sent_on:
              type: string
              format: date-time
              description: When the notification was sent
              example: "2020-11-16T20:08:39.128358"
            content:
              type: string
              description: Notification's contents
              example: "Your order at restaurant 'Foobar' has been canceled"
            read_on:
              type: string
              format: date-time
              description: If present, describes the time when the notification has been read by the recipient
              example: "2020-11-16T20:08:39.128358"
    EditNotification:
      allOf:
        - $ref: '#/components/schemas/NotificationBase'
        - type: object
          required:
          - read_on
          properties:
            read_on:
              type: string
              format: date-time
              description: If present, describes the time when the notification has been read by the recipient
              example: "2020-11-16T20:08:39.128358"
    Notification:
      allOf:
        - $ref: '#/components/schemas/NotificationBase'
        - type: object
          properties:
            user_id:
              type: integer
              description: Recipient's id
              example: 345
            sent_on:
              type: string
              format: date-time
              description: When the notification was sent
              example: "2020-11-16T20:08:39.128358"
            content:
              type: string
              description: Notification's contents
              example: "Your order at restaurant 'Foobar' has been canceled"
            read_on:
              type: string
              format: date-time
              description: If present, describes the time when the notification has been read by the recipient
              example: "2020-11-16T20:08:39.128358"